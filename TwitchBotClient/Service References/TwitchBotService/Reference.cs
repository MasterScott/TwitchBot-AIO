//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TwitchBotClient.TwitchBotService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/TwitchBotService")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasStoppedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TwitchBotClient.TwitchBotService.IrcBotInfo IrcBotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TwitchBotClient.TwitchBotService.ViewBotInfo ViewBotField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasStopped {
            get {
                return this.HasStoppedField;
            }
            set {
                if ((this.HasStoppedField.Equals(value) != true)) {
                    this.HasStoppedField = value;
                    this.RaisePropertyChanged("HasStopped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TwitchBotClient.TwitchBotService.IrcBotInfo IrcBot {
            get {
                return this.IrcBotField;
            }
            set {
                if ((object.ReferenceEquals(this.IrcBotField, value) != true)) {
                    this.IrcBotField = value;
                    this.RaisePropertyChanged("IrcBot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TwitchBotClient.TwitchBotService.ViewBotInfo ViewBot {
            get {
                return this.ViewBotField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewBotField, value) != true)) {
                    this.ViewBotField = value;
                    this.RaisePropertyChanged("ViewBot");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IrcBotInfo", Namespace="http://schemas.datacontract.org/2004/07/TwitchBotService")]
    [System.SerializableAttribute()]
    public partial class IrcBotInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasAccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RunningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasAccess {
            get {
                return this.HasAccessField;
            }
            set {
                if ((this.HasAccessField.Equals(value) != true)) {
                    this.HasAccessField = value;
                    this.RaisePropertyChanged("HasAccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Running {
            get {
                return this.RunningField;
            }
            set {
                if ((this.RunningField.Equals(value) != true)) {
                    this.RunningField = value;
                    this.RaisePropertyChanged("Running");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViewBotInfo", Namespace="http://schemas.datacontract.org/2004/07/TwitchBotService")]
    [System.SerializableAttribute()]
    public partial class ViewBotInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasAccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RunningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasAccess {
            get {
                return this.HasAccessField;
            }
            set {
                if ((this.HasAccessField.Equals(value) != true)) {
                    this.HasAccessField = value;
                    this.RaisePropertyChanged("HasAccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Running {
            get {
                return this.RunningField;
            }
            set {
                if ((this.RunningField.Equals(value) != true)) {
                    this.RunningField = value;
                    this.RaisePropertyChanged("Running");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TwitchBotService.IBotService")]
    public interface IBotService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBotService/StartUser", ReplyAction="http://tempuri.org/IBotService/StartUserResponse")]
        int StartUser(string userName, bool hasViewBot, bool hahsIrcBot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBotService/StartUser", ReplyAction="http://tempuri.org/IBotService/StartUserResponse")]
        System.Threading.Tasks.Task<int> StartUserAsync(string userName, bool hasViewBot, bool hahsIrcBot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBotService/StopUser", ReplyAction="http://tempuri.org/IBotService/StopUserResponse")]
        int StopUser(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBotService/StopUser", ReplyAction="http://tempuri.org/IBotService/StopUserResponse")]
        System.Threading.Tasks.Task<int> StopUserAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBotService/StartViewBot", ReplyAction="http://tempuri.org/IBotService/StartViewBotResponse")]
        int StartViewBot(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBotService/StartViewBot", ReplyAction="http://tempuri.org/IBotService/StartViewBotResponse")]
        System.Threading.Tasks.Task<int> StartViewBotAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBotService/StopViewBot", ReplyAction="http://tempuri.org/IBotService/StopViewBotResponse")]
        int StopViewBot(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBotService/StopViewBot", ReplyAction="http://tempuri.org/IBotService/StopViewBotResponse")]
        System.Threading.Tasks.Task<int> StopViewBotAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBotService/StartIrcBot", ReplyAction="http://tempuri.org/IBotService/StartIrcBotResponse")]
        int StartIrcBot(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBotService/StartIrcBot", ReplyAction="http://tempuri.org/IBotService/StartIrcBotResponse")]
        System.Threading.Tasks.Task<int> StartIrcBotAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBotService/StopIrcBot", ReplyAction="http://tempuri.org/IBotService/StopIrcBotResponse")]
        int StopIrcBot(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBotService/StopIrcBot", ReplyAction="http://tempuri.org/IBotService/StopIrcBotResponse")]
        System.Threading.Tasks.Task<int> StopIrcBotAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBotService/GetUserInfo", ReplyAction="http://tempuri.org/IBotService/GetUserInfoResponse")]
        TwitchBotClient.TwitchBotService.User GetUserInfo(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBotService/GetUserInfo", ReplyAction="http://tempuri.org/IBotService/GetUserInfoResponse")]
        System.Threading.Tasks.Task<TwitchBotClient.TwitchBotService.User> GetUserInfoAsync(string userName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBotServiceChannel : TwitchBotClient.TwitchBotService.IBotService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BotServiceClient : System.ServiceModel.ClientBase<TwitchBotClient.TwitchBotService.IBotService>, TwitchBotClient.TwitchBotService.IBotService {
        
        public BotServiceClient() {
        }
        
        public BotServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BotServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BotServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BotServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int StartUser(string userName, bool hasViewBot, bool hahsIrcBot) {
            return base.Channel.StartUser(userName, hasViewBot, hahsIrcBot);
        }
        
        public System.Threading.Tasks.Task<int> StartUserAsync(string userName, bool hasViewBot, bool hahsIrcBot) {
            return base.Channel.StartUserAsync(userName, hasViewBot, hahsIrcBot);
        }
        
        public int StopUser(string userName) {
            return base.Channel.StopUser(userName);
        }
        
        public System.Threading.Tasks.Task<int> StopUserAsync(string userName) {
            return base.Channel.StopUserAsync(userName);
        }
        
        public int StartViewBot(string userName) {
            return base.Channel.StartViewBot(userName);
        }
        
        public System.Threading.Tasks.Task<int> StartViewBotAsync(string userName) {
            return base.Channel.StartViewBotAsync(userName);
        }
        
        public int StopViewBot(string userName) {
            return base.Channel.StopViewBot(userName);
        }
        
        public System.Threading.Tasks.Task<int> StopViewBotAsync(string userName) {
            return base.Channel.StopViewBotAsync(userName);
        }
        
        public int StartIrcBot(string userName) {
            return base.Channel.StartIrcBot(userName);
        }
        
        public System.Threading.Tasks.Task<int> StartIrcBotAsync(string userName) {
            return base.Channel.StartIrcBotAsync(userName);
        }
        
        public int StopIrcBot(string userName) {
            return base.Channel.StopIrcBot(userName);
        }
        
        public System.Threading.Tasks.Task<int> StopIrcBotAsync(string userName) {
            return base.Channel.StopIrcBotAsync(userName);
        }
        
        public TwitchBotClient.TwitchBotService.User GetUserInfo(string userName) {
            return base.Channel.GetUserInfo(userName);
        }
        
        public System.Threading.Tasks.Task<TwitchBotClient.TwitchBotService.User> GetUserInfoAsync(string userName) {
            return base.Channel.GetUserInfoAsync(userName);
        }
    }
}
